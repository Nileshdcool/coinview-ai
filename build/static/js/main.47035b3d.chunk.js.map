{"version":3,"sources":["actions/types.js","http-common.js","services/AssetService.js","pages/AddAsset.js","actions/assets.js","pages/Asset.js","pages/AssetsList.js","pages/cryptocurrencies.js","actions/crypto.js","pages/exchanges.js","pages/comingsoon.js","App.js","reducers/assets.js","reducers/crypto.js","reducers/index.js","store.js","reportWebVitals.js","index.js"],"names":["CREATE_ASSET","RETRIEVE_ASSETS","RETRIEVE_ALL_ASSETS","UPDATE_ASSET","DELETE_ASSET","DELETE_ALL_ASSETS","axios","create","baseURL","headers","AssetService","getAll","http","get","id","data","post","update","put","remove","delete","removeAll","findByName","name","getAllAssets","getCryptoInfo","AddAsset","initialAssetState","description","useState","asset","setAsset","submitted","setSubmitted","history","useHistory","dispatch","useDispatch","handleInputChange","event","target","value","className","onClick","htmlFor","type","required","onChange","a","AssetDataService","res","payload","Promise","resolve","reject","createAsset","then","push","console","log","catch","e","Asset","props","currentAsset","setCurrentAsset","message","setMessage","useEffect","match","params","response","style","marginBottom","Button","marginRight","color","AssetlsList","setCurrentIndex","searchName","setSearchTitle","isLoading","assets","useSelector","state","refreshData","placeholder","searchTitle","findByTitle","float","marginLeft","Spinner","width","height","Table","dark","length","map","crypto","index","setActiveAsset","textAlign","scope","to","Cryptocurrencies","setIsLoading","slice","cmc_rank","src","symbol","x","max_supply","toString","replace","quote","USD","price","toFixed","Exchanges","ComingSoon","App","paddingBottom","paddingTop","Badge","margin","href","exact","path","component","AssetsList","initialState","assetReducer","action","filter","cryptoReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4RAAaA,EAAe,eACfC,EAAkB,kBAClBC,EAAsB,sBAEtBC,EAAe,eACfC,EAAe,eACfC,EAAoB,oB,QCJlBC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,4BACTC,QAAS,CACL,eAAgB,sBC6CTC,EAZM,CACjBC,OArCW,WACX,OAAOC,EAAKC,IAAI,YAqChBA,IA9BQ,SAAAC,GACR,OAAOF,EAAKC,IAAL,kBAAoBC,KA8B3BP,OA3BW,SAAAQ,GACX,OAAOH,EAAKI,KAAK,UAAWD,IA2B5BE,OAxBW,SAACH,EAAIC,GAChB,OAAOH,EAAKM,IAAL,kBAAoBJ,GAAMC,IAwBjCI,OArBW,SAAAL,GACX,OAAOF,EAAKQ,OAAL,kBAAuBN,KAqB9BO,UAlBc,WACd,OAAOT,EAAKQ,OAAL,YAkBPE,WAfe,SAAAC,GACf,OAAOX,EAAKC,IAAL,uBAAyBU,KAehCC,aAxCiB,WACjB,OAAOZ,EAAKC,IAAI,yBAwChBY,cAbkB,SAAAX,GAClB,OAAOF,EAAKC,IAAL,mCAAqCC,M,OC0DjCY,EAxFE,WACb,IAAMC,EAAoB,CACtBb,GAAI,KACJS,KAAM,GACNK,YAAa,IAEjB,EAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAUC,cAEVC,EAAWC,cAEXC,EAAoB,SAAAC,GACtB,MAAwBA,EAAMC,OAAtBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MACdV,EAAS,2BAAKD,GAAN,kBAAcP,EAAOkB,MA2BjC,OACI,qBAAKC,UAAU,cAAf,SACKV,EACG,gCACI,6DACA,wBAAQU,UAAU,kBAAkBC,QATnC,WACbZ,EAASJ,GACTM,GAAa,IAOD,oBAKJ,gCACI,sBAAKS,UAAU,aAAf,UACI,uBAAOE,QAAQ,QAAf,kBACA,uBACIC,KAAK,OACLH,UAAU,eACV5B,GAAG,OACHgC,UAAQ,EACRL,MAAOX,EAAMP,KACbwB,SAAUT,EACVf,KAAK,YAIb,sBAAKmB,UAAU,aAAf,UACI,uBAAOE,QAAQ,cAAf,yBACA,uBACIC,KAAK,OACLH,UAAU,eACV5B,GAAG,cACHgC,UAAQ,EACRL,MAAOX,EAAMF,YACbmB,SAAUT,EACVf,KAAK,mBAIb,wBAAQoB,QA7DN,WACd,IAAQpB,EAAsBO,EAAtBP,KAAMK,EAAgBE,EAAhBF,YAEdQ,ECdmB,SAACb,EAAMK,GAAP,8CAAuB,WAAOQ,GAAP,eAAAY,EAAA,+EAExBC,EAAiB1C,OAAO,CAAEgB,OAAMK,gBAFR,cAEpCsB,EAFoC,OAI1Cd,EAAS,CACLS,KAAM7C,EACNmD,QAASD,EAAInC,OANyB,kBASnCqC,QAAQC,QAAQH,EAAInC,OATe,yDAWnCqC,QAAQE,OAAR,OAXmC,yDAAvB,sDDcVC,CAAYhC,EAAMK,IACtB4B,MAAK,SAAAzC,GACFgB,EAAS,CACLjB,GAAIC,EAAKD,GACTS,KAAMR,EAAKQ,KACXK,YAAab,EAAKa,cAEtBK,GAAa,GAEbC,EAAQuB,KADA,UAERC,QAAQC,IAAI5C,MAEf6C,OAAM,SAAAC,GACHH,QAAQC,IAAIE,OA6CoBnB,UAAU,kBAAtC,0B,QE2BLoB,EAzGD,SAACC,GACX,IAKA,EAAwClC,mBALd,CACtBf,GAAI,KACJS,KAAM,GACNK,YAAa,KAEjB,mBAAOoC,EAAP,KAAqBC,EAArB,KACA,EAA8BpC,mBAAS,IAAvC,mBAAOqC,EAAP,KAAgBC,EAAhB,KAEM/B,EAAWC,cAajB+B,qBAAU,WAXO,IAAAtD,IAYJiD,EAAMM,MAAMC,OAAOxD,GAX5BmC,EAAiBpC,IAAIC,GAChB0C,MAAK,SAAAe,GACFN,EAAgBM,EAASxD,MACzB2C,QAAQC,IAAIY,EAASxD,SAExB6C,OAAM,SAAAC,GACHH,QAAQC,IAAIE,QAMrB,CAACE,EAAMM,MAAMC,OAAOxD,KAEvB,IAAMwB,EAAoB,SAAAC,GACtB,MAAwBA,EAAMC,OAAtBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MACdwB,EAAgB,2BAAKD,GAAN,kBAAqBzC,EAAOkB,MAyB/C,OACI,8BACKuB,EACG,sBAAKtB,UAAU,YAAf,UACI,uCACA,uBAAM8B,MAAO,CAAEC,aAAc,QAA7B,UACI,sBAAK/B,UAAU,aAAf,UACI,uBAAOE,QAAQ,OAAf,mBACA,uBACIC,KAAK,OACLH,UAAU,eACV5B,GAAG,OACHS,KAAK,OACLkB,MAAOuB,EAAazC,KACpBwB,SAAUT,OAGlB,sBAAKI,UAAU,aAAf,UACI,uBAAOE,QAAQ,cAAf,yBACA,uBACIC,KAAK,OACLH,UAAU,eACV5B,GAAG,cACHS,KAAK,cACLkB,MAAOuB,EAAapC,YACpBmB,SAAUT,UAKtB,cAACoC,EAAA,EAAD,CAAQF,MAAO,CAAEG,YAAa,QAAUC,MAAM,SAASjC,QAxCnD,WDMG,IAAC7B,ECLpBsB,GDKoBtB,ECLCkD,EAAalD,GDKf,uCAAQ,WAAOsB,GAAP,SAAAY,EAAA,+EAErBC,EAAiB9B,OAAOL,GAFH,OAI3BsB,EAAS,CACLS,KAAMzC,EACN+C,QAAS,CAAErC,QANY,+CAS3B4C,QAAQC,IAAR,MAT2B,wDAAR,wDCJdH,MAAK,WACFO,EAAM7B,QAAQuB,KAAK,cAEtBG,OAAM,SAAAC,GACHH,QAAQC,IAAIE,OAkCR,oBAGA,cAACa,EAAA,EAAD,CACI7B,KAAK,SACL+B,MAAM,UACNjC,QA1DE,WDGC,IAAC7B,EAAIC,ECFxBqB,GDEoBtB,ECFCkD,EAAalD,GDEVC,ECFciD,EDEnB,uCAAc,WAAO5B,GAAP,eAAAY,EAAA,+EAEfC,EAAiBhC,OAAOH,EAAIC,GAFb,cAE3BmC,EAF2B,OAIjCd,EAAS,CACLS,KAAM1C,EACNgD,QAASpC,IANoB,kBAS1BqC,QAAQC,QAAQH,EAAInC,OATM,yDAW1BqC,QAAQE,OAAR,OAX0B,yDAAd,wDCDdE,MAAK,SAAAe,GACFb,QAAQC,IAAIY,GACZR,EAAM7B,QAAQuB,KAAK,WACnBU,EAAW,0CAEdP,OAAM,SAAAC,GACHH,QAAQC,IAAIE,OA+CR,oBAOA,4BAAIK,OAGR,gCACI,uBACA,iE,gBCuDLW,EAjJK,WAClB,MAAwChD,mBAAS,MAAjD,mBAAOmC,EAAP,KAAqBC,EAArB,KACA,EAAwCpC,oBAAU,GAAlD,mBAAqBiD,GAArB,WACA,EAAqCjD,mBAAS,IAA9C,mBAAOkD,EAAP,KAAmBC,EAAnB,KACA,EAAkCnD,oBAAS,GAA3C,mBAAOoD,EAAP,KAEM/C,GAFN,KAEgBC,eAEV+C,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UACpC9C,EAAWC,cAOjB+B,qBAAU,WACRhC,EFJ0B,uCAAM,WAAOA,GAAP,eAAAY,EAAA,+EAEVC,EAAiBtC,SAFP,OAEtBuC,EAFsB,OAI5Bd,EAAS,CACLS,KAAM5C,EACNkD,QAASD,EAAInC,OANW,gDAS5B2C,QAAQC,IAAR,MAT4B,yDAAN,yDEKzB,IAEH,IAKM0B,EAAc,WAClBpB,EAAgB,MAChBa,GAAiB,IAgCnB,OACE,sBAAKpC,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBACEG,KAAK,OACLH,UAAU,eACV4C,YAAY,iBACZ7C,MAAOsC,EACPhC,SAhDiB,SAAAc,GACzB,IAAM0B,EAAc1B,EAAErB,OAAOC,MAC7BuC,EAAeO,MAgDT,qBAAK7C,UAAU,qBAAf,SACE,cAACgC,EAAA,EAAD,CACEE,MAAM,UACN/B,KAAK,SACLF,QA5BO,WFuBY,IAACpB,EEtB9B8D,IACAjD,GFqB8Bb,EErBHwD,EFqBE,uCAAU,WAAO3C,GAAP,eAAAY,EAAA,+EAEjBC,EAAiBuC,YAAYjE,GAFZ,OAE7B2B,EAF6B,OAInCd,EAAS,CACLS,KAAM5C,EACNkD,QAASD,EAAInC,OANkB,gDASnC2C,QAAQC,IAAR,MATmC,yDAAV,yDEErB,2BAUN,sBAAKjB,UAAU,WAAf,UACE,sBAAKA,UAAU,MAAM8B,MAAO,CAACC,aAAa,QAA1C,UACE,qBAAK/B,UAAU,WAAf,SACA,+CAEA,sBAAKA,UAAU,WAAf,UACA,cAACgC,EAAA,EAAD,CAAQF,MAAO,CAACiB,MAAM,SAAU9C,QA5EpB,WAElBT,EAAQuB,KADA,QA2EoDmB,MAAM,UAA5D,iBAAmF,UAGnFK,EArCJ,qBAAKvC,UAAU,SAAS8B,MAAO,CAAEkB,WAAY,QAA7C,SACE,cAACC,EAAA,EAAD,CAASnB,MAAO,CAAEoB,MAAO,OAAQC,OAAQ,QAAUhD,KAAK,WAoC1C,eAACiD,EAAA,EAAD,CAAOC,MAAI,EAAX,UACZ,gCACE,+BACE,mCACA,sCACA,6CACA,6CAGHb,EAAOc,OAAS,GAAK,gCACnBd,EAAOe,KAAI,SAACC,EAAQC,GAAT,OACV,qBAAgBxD,QAAS,kBAvEd,SAACb,EAAOqE,GAC7BlC,EAAgBnC,GAChBgD,EAAgBqB,GAqEyBC,CAAeF,EAAQC,IAAtD,UACE,oBAAI3B,MAAO,CAAE6B,UAAW,UAAYC,MAAM,MAA1C,SAAiDH,EAAQ,IACzD,6BAAKD,EAAO3E,OACZ,6BAAK2E,EAAOtE,cACZ,+BAAI,cAAC8C,EAAA,EAAD,CAAQE,MAAM,OAAd,kBAAmC,SAJhCuB,WASf,wBACEzD,UAAU,4BACVC,QA7EgB,WACtBP,EFkB2B,uCAAM,WAAOA,GAAP,eAAAY,EAAA,+EAEXC,EAAiB5B,YAFN,cAEvB6B,EAFuB,OAI7Bd,EAAS,CACLS,KAAMxC,EACN8C,QAASD,EAAInC,OANY,kBAStBqC,QAAQC,QAAQH,EAAInC,OATE,yDAWtBqC,QAAQE,OAAR,OAXsB,yDAAN,uDEjBxBE,MAAK,SAAAe,GACJb,QAAQC,IAAIY,GACZc,OAEDzB,OAAM,SAAAC,GACLH,QAAQC,IAAIE,OAoEZ,2BAOF,qBAAKnB,UAAU,WAAf,SACGsB,EACC,gCACE,uCACA,gCACE,gCACE,6CACO,IACRA,EAAazC,QAEhB,gCACE,gCACE,oDACO,IACRyC,EAAapC,eAEhB,cAAC,IAAD,CACE2E,GAAI,WAAavC,EAAalD,GADhC,qBAMA,SCvIZ,IAqFe0F,EA7EU,SAACzC,GACtB,MAAwClC,mBAAS,MAAjD,mBACA,GADA,UACwCA,oBAAU,IAAlD,mBACA,GADA,UACqCA,mBAAS,KAA9C,mBACA,GADA,UACkCA,oBAAS,IAA3C,mBAAOoD,EAAP,KAAkBwB,EAAlB,KAEIvB,EAASC,aAAY,SAAAC,GACrB,GAAIA,EAAMc,OAAOF,OAAS,EAItB,OAHIf,GACAwB,GAAa,GAEVrB,EAAMc,OAAOQ,MAAM,EAAG,OAI/BtE,EAAWC,cAEjB+B,qBAAU,WACNhC,ECnCyB,uCAAM,WAAOA,GAAP,eAAAY,EAAA,+EAEbC,EAAiBzB,eAFJ,OAEzB0B,EAFyB,OAI/Bd,EAAS,CACLS,KAAM3C,EACNiD,QAASD,EAAInC,OANc,gDAS/B2C,QAAQC,IAAR,MAT+B,yDAAN,yDDoC1B,IA0BH,OACI,qCACI,6EACA,6GACEsB,EAvDN,qBAAKvC,UAAU,SAAS8B,MAAO,CAAEkB,WAAY,QAA7C,SACI,cAACC,EAAA,EAAD,CAASnB,MAAO,CAAEoB,MAAO,OAAQC,OAAQ,QAAUhD,KAAK,WAsD1C,eAACiD,EAAA,EAAD,CAAOC,MAAI,EAAX,UACV,gCACI,+BACI,mCACA,uBACA,sCACA,wCACA,2CACA,4CAGPb,EAAOc,OAAS,GAAK,gCACjBd,EAAOe,KAAI,SAACC,EAAQC,GAAT,OACR,+BACI,oBAAI3B,MAAO,CAAE6B,UAAW,UAAYC,MAAM,MAA1C,SAAiDJ,EAAOS,WACxD,qBAAInC,MAAO,CAAC6B,UAAU,SAAtB,eAAkC,qBAAKO,KAvB9C9F,EAuB2DoF,EAAOpF,GAtBxE,uDAAyDA,EAAK,aAuBjD,6BAAKoF,EAAO3E,OACZ,6BAAK2E,EAAOW,SACZ,8BAlFFC,EAkFwBZ,EAAOa,WAjFhDD,EAGEA,EAAEE,WAAWC,QAAQ,kCAAmC,KAFpD,MAiFa,mCAAMf,EAAOgB,MAAQhB,EAAOgB,MAAMC,IAAIC,MAAMC,QAAQ,GAAK,QANpDlB,GA7EjC,IAA0BW,EAwDLhG,cE7BNwG,EAnCG,SAACvD,GACf,OACI,eAAC+B,EAAA,EAAD,CAAOC,MAAI,EAAX,UACI,gCACI,+BACI,mCACA,2CACA,2CACA,+CAGR,kCACI,+BACI,oBAAIO,MAAM,MAAV,eACA,sCACA,sCACA,yCAEJ,+BACI,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,yCAEJ,+BACI,oBAAIA,MAAM,MAAV,eACA,uCACA,0CACA,oD,QCXLiB,EAnBI,SAACxD,GAChB,OACI,gCACI,qBAAKrB,UAAU,QAAf,SACI,qBAAKA,UAAU,UAAf,SACI,yCAGR,sBAAKA,UAAU,SAAf,UACI,6CACA,uBACA,2CAEJ,qBAAKA,UAAU,aAAf,SACI,gDC0ED8E,MA5Ef,WACE,OACE,eAAC,IAAD,WACE,sBAAKhD,MAAO,CAAEiD,cAAe,SAAUC,WAAY,UAAYhF,UAAU,2CAAzE,UACE,oBAAI8B,MAAO,CAACkB,WAAW,QAAvB,SAAgC,cAACiC,EAAA,EAAD,CAAO/C,MAAM,YAAb,wBAChC,6BAAI,cAAC+C,EAAA,EAAD,CAAO/C,MAAM,YAAb,0BACJ,6BAAI,cAAC+C,EAAA,EAAD,CAAO/C,MAAM,YAAb,2BACJ,6BAAI,cAAC+C,EAAA,EAAD,CAAO/C,MAAM,YAAb,wBACJ,6BAAI,cAAC+C,EAAA,EAAD,CAAO/C,MAAM,YAAb,0BACJ,6BAAI,cAAC+C,EAAA,EAAD,CAAO/C,MAAM,YAAb,2BAEN,oBAAIJ,MAAO,CAAEoD,OAAQ,aAErB,sBAAKlF,UAAU,2CAAf,UACE,mBAAG8B,MAAO,CAACkB,WAAW,QAASmC,KAAK,UAAUnF,UAAU,eAAxD,yBAGA,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM6D,GAAI,oBAAqB7D,UAAU,WAAzC,gCAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM6D,GAAI,UAAW7D,UAAU,WAA/B,yBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM6D,GAAI,cAAe7D,UAAU,WAAnC,yBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM6D,GAAI,cAAe7D,UAAU,WAAnC,mBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM6D,GAAI,cAAe7D,UAAU,WAAnC,yBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM6D,GAAI,cAAe7D,UAAU,WAAnC,yBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM6D,GAAI,cAAe7D,UAAU,WAAnC,wBAIF,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAM6D,GAAI,cAAe7D,UAAU,WAAnC,2BAON,qBAAKA,UAAU,iBAAf,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoF,OAAK,EAACC,KAAM,CAAC,IAAK,qBAAsBC,UAAWxB,IAC1D,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAM,CAAC,cAAeC,UAAWV,IAC9C,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,OAAOC,UAAWtG,IACpC,cAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,UAAUC,UAAWC,IACvC,cAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWlE,IACrC,cAAC,IAAD,CAAOiE,KAAK,cAAcC,UAAWT,a,gCC3EzCW,EAAe,GAmCNC,MAjCf,WAAsD,IAAhCjD,EAA+B,uDAAtBgD,EAAcE,EAAQ,uCACzCvF,EAAkBuF,EAAlBvF,KAAMM,EAAYiF,EAAZjF,QAEd,OAAQN,GACJ,KAAK7C,EACD,MAAM,GAAN,mBAAWkF,GAAX,CAAmB/B,IAEvB,KAAKlD,EACD,OAAOkD,EAEX,KAAKhD,EACD,OAAO+E,EAAOe,KAAI,SAACnE,GACf,OAAIA,EAAMhB,KAAOqC,EAAQrC,GACd,2BACAgB,GACAqB,GAGArB,KAInB,KAAK1B,EACD,OAAO8E,EAAOmD,QAAO,qBAAGvH,KAAgBqC,EAAQrC,MAEpD,KAAKT,EACD,MAAO,GAEX,QACI,OAAO6E,IClCbgD,EAAe,GAcNI,MAZf,WAAuD,IAAhCpD,EAA+B,uDAAtBgD,EAAcE,EAAQ,uCAC1CvF,EAAkBuF,EAAlBvF,KAAMM,EAAYiF,EAAZjF,QAEd,OAAQN,GACJ,KAAK3C,EACD,OAAOiD,EAEX,QACI,OAAO+B,ICVJqD,4BAAgB,CAC3BrD,SACAgB,WCCEsC,EAAa,CAACC,KAQLC,EANDC,sBACVC,EALiB,GAOjBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KCA5BO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzF,MAAK,YAAkD,IAA/C0F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAD,CAAUd,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFe,SAASC,eAAe,SAM1BX,M","file":"static/js/main.47035b3d.chunk.js","sourcesContent":["export const CREATE_ASSET = \"CREATE_ASSET\";\nexport const RETRIEVE_ASSETS = \"RETRIEVE_ASSETS\";\nexport const RETRIEVE_ALL_ASSETS = \"RETRIEVE_ALL_ASSETS\";\nexport const GET_CRYPTO_INFO = \"GET_CRYPTO_INFO\";\nexport const UPDATE_ASSET = \"UPDATE_ASSET\";\nexport const DELETE_ASSET = \"DELETE_ASSET\";\nexport const DELETE_ALL_ASSETS = \"DELETE_ALL_ASSETS\";","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"http://localhost:8080/api\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});","import http from \"../http-common\";\n\nconst getAll = () => {\n    return http.get(\"/assets\");\n};\n\nconst getAllAssets = () => {\n    return http.get(\"/assets/getAllAssets\");\n};\n\nconst get = id => {\n    return http.get(`/assets/${id}`);\n};\n\nconst create = data => {\n    return http.post(\"/assets\", data);\n};\n\nconst update = (id, data) => {\n    return http.put(`/assets/${id}`, data);\n};\n\nconst remove = id => {\n    return http.delete(`/assets/${id}`);\n};\n\nconst removeAll = () => {\n    return http.delete(`/assets`);\n};\n\nconst findByName = name => {\n    return http.get(`/assets?name=${name}`);\n};\n\nconst getCryptoInfo = id => {\n    return http.get(`/assets/getCryptoInfo?id=${id}`);\n};\n\nconst AssetService = {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByName,\n    getAllAssets,\n    getCryptoInfo\n};\n\nexport default AssetService;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createAsset } from \"../actions/assets\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AddAsset = () => {\n    const initialAssetState = {\n        id: null,\n        name: \"\",\n        description: \"\"\n    };\n    const [asset, setAsset] = useState(initialAssetState);\n    const [submitted, setSubmitted] = useState(false);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setAsset({ ...asset, [name]: value });\n    };\n\n    const saveAsset = () => {\n        const { name, description } = asset;\n\n        dispatch(createAsset(name, description))\n            .then(data => {\n                setAsset({\n                    id: data.id,\n                    name: data.name,\n                    description: data.description\n                });\n                setSubmitted(true);\n                let path = `assets`; \n                history.push(path);\n                console.log(data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const newAsset = () => {\n        setAsset(initialAssetState);\n        setSubmitted(false);\n    };\n    return (\n        <div className=\"submit-form\">\n            {submitted ? (\n                <div>\n                    <h4>You submitted successfully!</h4>\n                    <button className=\"btn btn-success\" onClick={newAsset}>\n                        Add\n                    </button>\n                </div>\n            ) : (\n                <div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Name</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"name\"\n                            required\n                            value={asset.name}\n                            onChange={handleInputChange}\n                            name=\"name\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Description</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"description\"\n                            required\n                            value={asset.description}\n                            onChange={handleInputChange}\n                            name=\"description\"\n                        />\n                    </div>\n\n                    <button onClick={saveAsset} className=\"btn btn-success\">\n                        Submit\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default AddAsset;","import {\n    CREATE_ASSET,\n    RETRIEVE_ASSETS,\n    UPDATE_ASSET,\n    DELETE_ASSET,\n    DELETE_ALL_ASSETS\n} from \"./types\";\n\nimport AssetDataService from \"../services/AssetService\";\n\n// TODO:- Need to add for getAlAssets call as well\n\nexport const createAsset = (name, description) => async (dispatch) => {\n    try {\n        const res = await AssetDataService.create({ name, description });\n\n        dispatch({\n            type: CREATE_ASSET,\n            payload: res.data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const retrieveAssets = () => async (dispatch) => {\n    try {\n        const res = await AssetDataService.getAll();\n\n        dispatch({\n            type: RETRIEVE_ASSETS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const updateAsset = (id, data) => async (dispatch) => {\n    try {\n        const res = await AssetDataService.update(id, data);\n\n        dispatch({\n            type: UPDATE_ASSET,\n            payload: data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const deleteAsset = (id) => async (dispatch) => {\n    try {\n        await AssetDataService.remove(id);\n\n        dispatch({\n            type: DELETE_ASSET,\n            payload: { id },\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const deleteAllAssets = () => async (dispatch) => {\n    try {\n        const res = await AssetDataService.removeAll();\n\n        dispatch({\n            type: DELETE_ALL_ASSETS,\n            payload: res.data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const findAssetsByTitle = (name) => async (dispatch) => {\n    try {\n        const res = await AssetDataService.findByTitle(name);\n\n        dispatch({\n            type: RETRIEVE_ASSETS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};","import { Button } from \"reactstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateAsset, deleteAsset } from \"../actions/assets\";\nimport AssetDataService from \"../services/AssetService\";\n\nconst Asset = (props) => {\n    const initialAssetState = {\n        id: null,\n        name: \"\",\n        description: \"\"\n    };\n    const [currentAsset, setCurrentAsset] = useState(initialAssetState);\n    const [message, setMessage] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const getAsset = id => {\n        AssetDataService.get(id)\n            .then(response => {\n                setCurrentAsset(response.data);\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    useEffect(() => {\n        getAsset(props.match.params.id);\n    }, [props.match.params.id]);\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setCurrentAsset({ ...currentAsset, [name]: value });\n    };\n\n    const updateContent = () => {\n        dispatch(updateAsset(currentAsset.id, currentAsset))\n            .then(response => {\n                console.log(response);\n                props.history.push(\"/assets\");\n                setMessage(\"The asset was updated successfully!\");\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const removeAsset = () => {\n        dispatch(deleteAsset(currentAsset.id))\n            .then(() => {\n                props.history.push(\"/assets\");\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    return (\n        <div>\n            {currentAsset ? (\n                <div className=\"edit-form\">\n                    <h4>Asset</h4>\n                    <form style={{ marginBottom: \"10px\" }}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\">Title</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"name\"\n                                name=\"name\"\n                                value={currentAsset.name}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Description</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                name=\"description\"\n                                value={currentAsset.description}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                    </form>\n\n                    <Button style={{ marginRight: \"10px\" }} color=\"danger\" onClick={removeAsset}>\n                        Delete\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        color=\"success\"\n                        onClick={updateContent}\n                    >\n                        Update\n                    </Button>\n                    <p>{message}</p>\n                </div>\n            ) : (\n                <div>\n                    <br />\n                    <p>Please click on a Asset...</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Asset;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  retrieveAssets,\n  findAssetsByTitle,\n  deleteAllAssets,\n} from \"../actions/assets\";\nimport { useHistory } from \"react-router-dom\";\nimport { Table } from 'reactstrap';\n\nimport { Spinner } from 'reactstrap';\nimport { Button } from 'reactstrap';\n\nconst AssetlsList = () => {\n  const [currentAsset, setCurrentAsset] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchName, setSearchTitle] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n\n  const assets = useSelector(state => state.assets);\n  const dispatch = useDispatch();\n\n  const routeChange = () =>{ \n    let path = `add`; \n    history.push(path);\n  }\n\n  useEffect(() => {\n    dispatch(retrieveAssets());\n  }, []);\n\n  const onChangeSearchName = e => {\n    const searchTitle = e.target.value;\n    setSearchTitle(searchTitle);\n  };\n\n  const refreshData = () => {\n    setCurrentAsset(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveAsset = (asset, index) => {\n    setCurrentAsset(asset);\n    setCurrentIndex(index);\n  };\n\n  const removeAllAssets = () => {\n    dispatch(deleteAllAssets())\n      .then(response => {\n        console.log(response);\n        refreshData();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const findByName = () => {\n    refreshData();\n    dispatch(findAssetsByTitle(searchName));\n  };\n\n  const renderSpinner = () => {\n    return (\n      <div className=\"center\" style={{ marginLeft: '50px' }}>\n        <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by name\"\n            value={searchName}\n            onChange={onChangeSearchName}\n          />\n          <div className=\"input-group-append\">\n            <Button\n              color=\"primary\"\n              type=\"button\"\n              onClick={findByName}\n            >\n              Search\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-8\">\n        <div className=\"row\" style={{marginBottom:\"20px\"}}>\n          <div className=\"col-md-8\">\n          <h4>Assets List</h4>\n          </div>\n          <div className=\"col-md-4\" >\n          <Button style={{float:\"right\"}} onClick={routeChange} color=\"primary\">Add</Button>{' '}\n          </div>\n        </div>\n        {!isLoading ? <Table dark>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Description</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          {assets.length > 0 && <tbody>\n            {assets.map((crypto, index) => (\n              <tr key={index} onClick={() => setActiveAsset(crypto, index)} >\n                <th style={{ textAlign: 'center' }} scope=\"row\">{index + 1}</th>\n                <td>{crypto.name}</td>\n                <td>{crypto.description}</td>\n                <td><Button color=\"link\">View</Button>{' '}</td>\n              </tr>\n            ))}\n          </tbody>}\n        </Table> : renderSpinner()}\n        <button\n          className=\"m-3 btn btn-sm btn-danger\"\n          onClick={removeAllAssets}\n        >\n          Remove All\n        </button>\n      </div>\n      <div className=\"col-md-4\">\n        {currentAsset ? (\n          <div>\n            <h4>Asset</h4>\n            <div>\n              <label>\n                <strong>Name:</strong>\n              </label>{\" \"}\n              {currentAsset.name}\n            </div>\n            <div>\n              <label>\n                <strong>Description:</strong>\n              </label>{\" \"}\n              {currentAsset.description}\n            </div>\n            <Link\n              to={\"/assets/\" + currentAsset.id}\n            >\n              Edit\n            </Link>\n          </div>\n        ) : ''}\n      </div>\n    </div>\n  );\n};\n\nexport default AssetlsList;","import React from 'react';\nimport { Table } from 'reactstrap';\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n    retrieveAllAssets,\n\n} from \"../actions/crypto\";\nimport { Spinner } from 'reactstrap';\n\nfunction numberWithCommas(x) {\n    if (!x) {\n        return '';\n    }\n    return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst renderSpinner = () => {\n    return (\n        <div className=\"center\" style={{ marginLeft: '50px' }}>\n            <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />\n        </div>\n    )\n}\n\nconst Cryptocurrencies = (props) => {\n    const [currentAsset, setCurrentAsset] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n    const [searchName, setSearchTitle] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(true);\n\n    let assets = useSelector(state => {\n        if (state.crypto.length > 0) {\n            if (isLoading) {\n                setIsLoading(false);\n            }\n            return state.crypto.slice(0, 50);\n        }\n    });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(retrieveAllAssets());\n    }, []);\n\n    const onChangeSearchName = e => {\n        const searchTitle = e.target.value;\n        setSearchTitle(searchTitle);\n    };\n\n    const refreshData = () => {\n        setCurrentAsset(null);\n        setCurrentIndex(-1);\n    };\n\n    const setActiveAsset = (asset, index) => {\n        setCurrentAsset(asset);\n        setCurrentIndex(index);\n    };\n\n    const findByName = () => {\n        refreshData();\n        // dispatch(findAssetsByTitle(searchName));\n    };\n\n    const getLogo = (id) => {\n        return 'https://s2.coinmarketcap.com/static/img/coins/64x64/' + id + '.png';\n    }\n\n    return (\n        <>\n            <h2>Today's Cryptocurrency Prices by Market Cap</h2>\n            <h5>The global crypto market cap is $1.31T, a 5.32% increase over the last day.</h5>\n            {!isLoading ? <Table dark>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th></th>\n                        <th>Name</th>\n                        <th>Symbol</th>\n                        <th>Max Suppy</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n                {assets.length > 0 && <tbody>\n                    {assets.map((crypto, index) => (\n                        <tr key={index}>\n                            <th style={{ textAlign: 'center' }} scope=\"row\">{crypto.cmc_rank}</th>\n                            <td style={{textAlign:'right'}}>  <img src={getLogo(crypto.id)} /></td>\n                            <td>{crypto.name}</td>\n                            <td>{crypto.symbol}</td>\n                            <td>{numberWithCommas(crypto.max_supply)}</td>\n                            <td>${crypto.quote ? crypto.quote.USD.price.toFixed(2) : ''}</td>\n                        </tr>\n                    ))}\n                </tbody>}\n            </Table> : renderSpinner()}\n        </>\n    );\n}\n\nexport default Cryptocurrencies;","import {\n    RETRIEVE_ALL_ASSETS,\n    GET_CRYPTO_INFO\n} from \"./types\";\n\nimport AssetDataService from \"../services/AssetService\";\n\n//TODO:- set name as getAllCrypto\n\nexport const retrieveAllAssets = () => async (dispatch) => {\n    try {\n        const res = await AssetDataService.getAllAssets();\n\n        dispatch({\n            type: RETRIEVE_ALL_ASSETS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const getCryptoInfo = (id) => async (dispatch) => {\n    try {\n        const res = await AssetDataService.getCryptoInfo(id);\n\n        dispatch({\n            type: GET_CRYPTO_INFO,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};","import React from 'react';\nimport { Table } from 'reactstrap';\n\nconst Exchanges = (props) => {\n    return (\n        <Table dark>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>First new</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Larry</td>\n                    <td>the Bird</td>\n                    <td>@twitter</td>\n                </tr>\n            </tbody>\n        </Table>\n    );\n}\n\nexport default Exchanges;","import React from 'react';\nconst ComingSoon = (props) => {\n    return (\n        <div>\n            <div className=\"bgimg\">\n                <div className=\"topleft\">\n                    <p>Logo</p>\n                </div>\n            </div>\n            <div className=\"middle\">\n                <h1>COMING SOON</h1>\n                <hr/>\n                <p>35 days</p>\n            </div>\n            <div className=\"bottomleft\">\n                <p>Some text</p>\n            </div>\n        </div>\n    )\n}\nexport default ComingSoon;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddAsset from \"./pages/AddAsset\";\nimport Asset from \"./pages/Asset\";\nimport AssetsList from \"./pages/AssetsList\";\nimport Cryptocurrencies from \"./pages/cryptocurrencies\";\nimport Exchanges from \"./pages/exchanges\";\nimport { Badge } from 'reactstrap';\nimport ComingSoon from \"./pages/comingsoon\";\n\nfunction App() {\n  return (\n    <Router>\n      <nav style={{ paddingBottom: '0.1rem', paddingTop: '0.5rem' }} className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <h6 style={{marginLeft:'10px'}}><Badge color=\"secondary\">Cryptos:</Badge></h6>\n        <h6><Badge color=\"secondary\">Exchanges:</Badge></h6>\n        <h6><Badge color=\"secondary\">Market Cap:</Badge></h6>\n        <h6><Badge color=\"secondary\">24h Vol:</Badge></h6>\n        <h6><Badge color=\"secondary\">Dominance:</Badge></h6>\n        <h6><Badge color=\"secondary\">Eth Gas:</Badge></h6>\n      </nav>\n      <hr style={{ margin: '0.01rem' }}></hr>\n\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a style={{marginLeft:'20px'}} href=\"/assets\" className=\"navbar-brand\">\n          CoinView.AI\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/cryptocurrencies\"} className=\"nav-link\">\n              Cryptocurrencies\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/assets\"} className=\"nav-link\">\n              Portfolio\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              Exchanges\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              NFT\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              Watchlist\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              Calendars\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              Products\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              Learn\n            </Link>\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        \n        <Switch>\n          <Route exact path={[\"/\", \"/cryptocurrencies\"]} component={Cryptocurrencies} />\n          <Route exact path={[\"/exchanges\"]} component={Exchanges} />\n          <Route exact path=\"/add\" component={AddAsset} />\n          <Route exact path=\"/assets\" component={AssetsList} />\n          <Route path=\"/assets/:id\" component={Asset} />\n          <Route path=\"/comingsoon\" component={ComingSoon} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import {\n    CREATE_ASSET,\n    RETRIEVE_ASSETS,\n    UPDATE_ASSET,\n    DELETE_ASSET,\n    DELETE_ALL_ASSETS} from \"../actions/types\";\n\nconst initialState = [];\n\nfunction assetReducer(assets = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case CREATE_ASSET:\n            return [...assets, payload];\n\n        case RETRIEVE_ASSETS:\n            return payload;\n\n        case UPDATE_ASSET:\n            return assets.map((asset) => {\n                if (asset.id === payload.id) {\n                    return {\n                        ...asset,\n                        ...payload,\n                    };\n                } else {\n                    return asset;\n                }\n            });\n\n        case DELETE_ASSET:\n            return assets.filter(({ id }) => id !== payload.id);\n\n        case DELETE_ALL_ASSETS:\n            return [];\n\n        default:\n            return assets;\n    }\n};\n\nexport default assetReducer;","import {\n    RETRIEVE_ALL_ASSETS\n} from \"../actions/types\";\n\nconst initialState = [];\n\nfunction cryptoReducer(assets = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case RETRIEVE_ALL_ASSETS:\n            return payload;\n\n        default:\n            return assets;\n    }\n};\n\nexport default cryptoReducer;","import { combineReducers } from \"redux\";\nimport assets from \"./assets\";\nimport crypto from \"./crypto\";\n\nexport default combineReducers({\n    assets,\n    crypto\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}