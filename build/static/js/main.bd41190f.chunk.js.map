{"version":3,"sources":["actions/types.js","http-common.js","services/AssetService.js","helper/constants.js","components/input.js","pages/AddAsset.js","actions/assets.js","pages/Asset.js","components/spinner.js","components/search.js","components/grid-header.js","pages/AssetsList.js","actions/crypto.js","components/sub-header.js","pages/cryptocurrencies.js","pages/exchanges.js","pages/comingsoon.js","App.js","reducers/assets.js","reducers/crypto.js","reducers/index.js","store.js","reportWebVitals.js","index.js"],"names":["CREATE_ASSET","RETRIEVE_ASSETS","RETRIEVE_ALL_ASSETS","UPDATE_ASSET","DELETE_ASSET","DELETE_ALL_ASSETS","axios","create","baseURL","headers","AssetService","getAll","http","get","catch","err","id","data","post","update","put","remove","delete","removeAll","findByName","name","getAllAssets","getCryptoInfo","ASSET","Input","props","attributes","htmlFor","label","value","handleInputChange","className","type","onChange","AddAsset","initialAssetState","description","useState","asset","setAsset","submitted","setSubmitted","history","useHistory","dispatch","useDispatch","event","target","nameInput","descInput","onClick","style","marginBottom","a","AssetDataService","res","payload","Promise","resolve","reject","createAsset","then","push","console","log","e","Asset","currentAsset","setCurrentAsset","message","setMessage","useEffect","match","params","response","Button","marginRight","color","AppSpinner","marginLeft","Spinner","width","height","Search","placeholder","searchData","searchName","onChangeSearchName","GridHeader","headerData","map","head","index","AssetlsList","setCurrentIndex","setSearchTitle","isLoading","assets","useSelector","state","refreshData","searchTitle","float","Table","dark","length","crypto","textAlign","scope","setActiveAsset","marginTop","to","retrieveAllAssets","SubHeader","Cryptocurrencies","setIsLoading","pageSize","filter","c","toLowerCase","includes","slice","cmc_rank","src","symbol","x","max_supply","toString","replace","quote","USD","price","toFixed","Exchanges","ComingSoon","App","paddingBottom","paddingTop","Badge","margin","href","exact","path","component","AssetsList","initialState","assetReducer","action","cryptoReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd41190f.chunk.js","sourcesContent":["export const CREATE_ASSET = \"CREATE_ASSET\";\nexport const RETRIEVE_ASSETS = \"RETRIEVE_ASSETS\";\nexport const RETRIEVE_ALL_ASSETS = \"RETRIEVE_ALL_ASSETS\";\nexport const GET_CRYPTO_INFO = \"GET_CRYPTO_INFO\";\nexport const UPDATE_ASSET = \"UPDATE_ASSET\";\nexport const DELETE_ASSET = \"DELETE_ASSET\";\nexport const DELETE_ALL_ASSETS = \"DELETE_ALL_ASSETS\";","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://coinview-ai.herokuapp.com/api\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});","import http from \"../http-common\";\n\nconst getAll = () => {\n    return http.get(\"/assets\").catch(err=>err);\n};\n\nconst getAllAssets = () => {\n    return http.get(\"/assets/getAllAssets\").catch(err=>err);\n};\n\nconst get = id => {\n    return http.get(`/assets/${id}`).catch(err=>err);\n};\n\nconst create = data => {\n    return http.post(\"/assets\", data).catch(err=>err);\n};\n\nconst update = (id, data) => {\n    return http.put(`/assets/${id}`, data).catch(err=>err);\n};\n\nconst remove = id => {\n    return http.delete(`/assets/${id}`).catch(err=>err);\n};\n\nconst removeAll = () => {\n    return http.delete(`/assets`).catch(err=>err);\n};\n\nconst findByName = name => {\n    return http.get(`/assets?name=${name}`).catch(err=>err);\n};\n\nconst getCryptoInfo = id => {\n    return http.get(`/assets/getCryptoInfo?id=${id}`).catch(err=>err);\n};\n\nconst AssetService = {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByName,\n    getAllAssets,\n    getCryptoInfo\n};\n\nexport default AssetService;","export const YOU_SUBMITTED_SUCCESSFULLY = 'You submitted successfully!';\nexport const ADD = 'Add';\nexport const SUBMIT = 'Submit';\nexport const DELETE = 'Delete';\nexport const UPDATE = 'Update'\nexport const ASSET = 'Asset';\nexport const REMOVE_ALL = 'Remove All';\nexport const NAME = 'Name'\nexport const DESC = 'Description';\nexport const EDIT = 'Edit';\nexport const ASSET_LIST = 'Assets List';\nexport const SEARCH = 'Search';","import React from 'react';\n\nconst Input = (props) => {\n    const {htmlFor,label,id,value,handleInputChange,name} = props.attributes;\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={htmlFor}>{label}</label>\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                id={id}\n                name={name}\n                value={value}\n                onChange={handleInputChange}\n            />\n        </div>\n    )\n}\nexport default Input;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createAsset } from \"../actions/assets\";\nimport { useHistory } from \"react-router-dom\";\nimport { ADD, SUBMIT, YOU_SUBMITTED_SUCCESSFULLY } from '../helper/constants';\nimport Input from '../components/input';\n\nconst AddAsset = () => {\n    const initialAssetState = {\n        id: null,\n        name: \"\",\n        description: \"\"\n    };\n    const [asset, setAsset] = useState(initialAssetState);\n    const [submitted, setSubmitted] = useState(false);\n\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setAsset({ ...asset, [name]: value });\n    };\n\n    const saveAsset = () => {\n        const { name, description } = asset;\n        dispatch(createAsset(name, description))\n            .then(data => {\n                setAsset({\n                    id: data.id,\n                    name: data.name,\n                    description: data.description\n                });\n                setSubmitted(true);\n                let path = `assets`;\n                history.push(path);\n                console.log(data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const newAsset = () => {\n        setAsset(initialAssetState);\n        setSubmitted(false);\n    };\n    const nameInput = {\n        htmlFor: 'name',\n        label: 'Name',\n        id: 'name',\n        value: asset.name,\n        handleInputChange,\n        name: 'name'\n    }\n    const descInput = {\n        htmlFor: 'description',\n        label: 'Description',\n        id: 'description',\n        value: asset.description,\n        handleInputChange,\n        name: 'description'\n    }\n    return (\n        <div className=\"submit-form\">\n            {submitted ? (\n                <div>\n                    <h4>{YOU_SUBMITTED_SUCCESSFULLY}</h4>\n                    <button className=\"btn btn-success\" onClick={newAsset}>\n                        {ADD}\n                    </button>\n                </div>\n            ) : (\n                <>\n                    <div style={{marginBottom:'20px'}}>\n                        <Input attributes={nameInput}></Input>\n                        <Input attributes={descInput}></Input>\n                    </div>\n                    <div>\n                        <button onClick={saveAsset} className=\"btn btn-success\">\n                            {SUBMIT}\n                        </button>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default AddAsset;","import {\n    CREATE_ASSET,\n    RETRIEVE_ASSETS,\n    UPDATE_ASSET,\n    DELETE_ASSET,\n    DELETE_ALL_ASSETS\n} from \"./types\";\n\nimport AssetDataService from \"../services/AssetService\";\n\nexport const createAsset = (name, description) => async (dispatch) => {\n    try {\n        const res = await AssetDataService.create({ name, description });\n\n        dispatch({\n            type: CREATE_ASSET,\n            payload: res.data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const retrieveAssets = () => async (dispatch) => {\n    try {\n        const res = await AssetDataService.getAll();\n\n        dispatch({\n            type: RETRIEVE_ASSETS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const updateAsset = (id, data) => async (dispatch) => {\n    try {\n        const res = await AssetDataService.update(id, data);\n\n        dispatch({\n            type: UPDATE_ASSET,\n            payload: data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const deleteAsset = (id) => async (dispatch) => {\n    try {\n        await AssetDataService.remove(id);\n\n        dispatch({\n            type: DELETE_ASSET,\n            payload: { id },\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const deleteAllAssets = () => async (dispatch) => {\n    try {\n        const res = await AssetDataService.removeAll();\n\n        dispatch({\n            type: DELETE_ALL_ASSETS,\n            payload: res.data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const findAssetsByName = (name) => async (dispatch) => {\n    try {\n        const res = await AssetDataService.findByName(name);\n\n        dispatch({\n            type: RETRIEVE_ASSETS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};","import { Button } from \"reactstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateAsset, deleteAsset } from \"../actions/assets\";\nimport AssetDataService from \"../services/AssetService\";\nimport Input from '../components/input';\nimport { ASSET, DELETE, UPDATE } from \"../helper/constants\";\n\nconst Asset = (props) => {\n    const initialAssetState = {\n        id: null,\n        name: \"\",\n        description: \"\"\n    };\n    const [currentAsset, setCurrentAsset] = useState(initialAssetState);\n    const [message, setMessage] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const getAsset = id => {\n        AssetDataService.get(id)\n            .then(response => {\n                setCurrentAsset(response.data);\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    useEffect(() => {\n        getAsset(props.match.params.id);\n    }, [props.match.params.id]);\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setCurrentAsset({ ...currentAsset, [name]: value });\n    };\n\n    const updateContent = () => {\n        dispatch(updateAsset(currentAsset.id, currentAsset))\n            .then(response => {\n                console.log(response);\n                props.history.push(\"/assets\");\n                setMessage(\"The asset was updated successfully!\");\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const removeAsset = () => {\n        dispatch(deleteAsset(currentAsset.id))\n            .then(() => {\n                props.history.push(\"/assets\");\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const nameInput = {\n        htmlFor: 'name',\n        label: 'Name',\n        id: 'name',\n        value: currentAsset.name,\n        handleInputChange,\n        name: 'name'\n    }\n    const descInput = {\n        htmlFor: 'description',\n        label: 'Description',\n        id: 'description',\n        value: currentAsset.description,\n        handleInputChange,\n        name: 'description'\n    }\n\n    return (\n        <div>\n            <div className=\"edit-form\">\n                <h4>{ASSET}</h4>\n                <form style={{ marginBottom: \"10px\" }}>\n                <Input attributes={nameInput}></Input>\n                <Input attributes={descInput}></Input>\n                </form>\n                <Button style={{ marginRight: \"10px\" }} color=\"danger\" onClick={removeAsset}>\n                    {DELETE}\n                </Button>\n                <Button\n                    type=\"submit\"\n                    color=\"success\"\n                    onClick={updateContent}\n                >\n                    {UPDATE}\n                </Button>\n                <p>{message}</p>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Asset;","import React from 'react';\nimport { Spinner } from 'reactstrap';\nexport const AppSpinner = () => {\n    return (\n        <div className=\"center\" style={{ marginLeft: '50px' }}>\n            <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport { SEARCH } from '../helper/constants';\n\nconst Search = (props) => {\n    return (\n        <>\n            <div className=\"col-md-12\">\n                <div className=\"input-group mb-3\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search by name\"\n                        value={props.searchData.searchName}\n                        onChange={props.searchData.onChangeSearchName}\n                    />\n                    <div className=\"input-group-append\">\n                        <Button\n                            color=\"primary\"\n                            type=\"button\"\n                            onClick={props.searchData.findByName}\n                        >\n                           {SEARCH}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default Search;","import React from 'react';\n\nconst GridHeader = (props) => {\n    const {headerData} = props;\n        return (\n            <thead>\n              <tr>\n                {headerData.map((head,index)=>{\n                  return (\n                    <th key={index}>{head}</th>\n                  )\n                })}\n              </tr>\n            </thead>\n          )\n}\nexport default GridHeader;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  retrieveAssets,\n  findAssetsByName,\n  deleteAllAssets,\n} from \"../actions/assets\";\nimport { useHistory } from \"react-router-dom\";\nimport { Table } from 'reactstrap';\n\nimport { AppSpinner } from '../components/spinner';\nimport { Button } from 'reactstrap';\nimport Search from \"../components/search\";\nimport GridHeader from \"../components/grid-header\";\nimport { ASSET, ASSET_LIST, DESC, EDIT, REMOVE_ALL, NAME } from \"../helper/constants\";\n\nconst AssetlsList = () => {\n  const [currentAsset, setCurrentAsset] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchName, setSearchTitle] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n\n  const assets = useSelector(state => state.assets);\n\n  const dispatch = useDispatch();\n\n  const routeChange = () => {\n    let path = `add`;\n    history.push(path);\n  }\n\n  useEffect(() => {\n    dispatch(retrieveAssets());\n  }, []);\n\n  const onChangeSearchName = e => {\n    const searchTitle = e.target.value;\n    setSearchTitle(searchTitle);\n  };\n\n  const refreshData = () => {\n    setCurrentAsset(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveAsset = (asset, index) => {\n    setCurrentAsset(asset);\n    setCurrentIndex(index);\n  };\n\n  const removeAllAssets = () => {\n    dispatch(deleteAllAssets())\n      .then(response => {\n        console.log(response);\n        refreshData();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const findByName = () => {\n    refreshData();\n    dispatch(findAssetsByName(searchName));\n  };\n\n  const searchData = {\n    searchName,\n    onChangeSearchName,\n    findByName\n  }\n\n  const headerData = ['#', 'Name', 'Description', 'Action'];\n  return (\n    <div className=\"row\">\n      <Search searchData={searchData}></Search>\n      <div className=\"col-md-8\">\n        <div className=\"row\" style={{ marginBottom: \"20px\" }}>\n          <div className=\"col-md-8\">\n            <h4>{ASSET_LIST}</h4>\n          </div>\n          <div className=\"col-md-4\" >\n            <Button style={{ float: \"right\" }} onClick={routeChange} color=\"primary\">Add</Button>{' '}\n          </div>\n        </div>\n        {!isLoading ? <Table dark>\n          <GridHeader headerData={headerData}></GridHeader>\n          {assets.length > 0 && <tbody>\n            {assets.map((crypto, index) => (\n              <tr key={index}>\n                <th style={{ textAlign: 'center' }} scope=\"row\">{index + 1}</th>\n                <td>{crypto.name}</td>\n                <td>{crypto.description}</td>\n                <td><Button onClick={() => setActiveAsset(crypto, index)} color=\"link\">View</Button>{' '}</td>\n              </tr>\n            ))}\n          </tbody>}\n        </Table> : <AppSpinner></AppSpinner>}\n        <button\n          className=\"m-3 btn btn-sm btn-danger\"\n          onClick={removeAllAssets}\n        >\n          {REMOVE_ALL}\n        </button>\n      </div>\n      <div className=\"col-md-4\" style={{ marginTop: '55px' }}>\n        {currentAsset ? (\n          <div>\n            <h4>{ASSET}</h4>\n            <div>\n              <label>\n                <strong>{NAME}:</strong>\n              </label>{\" \"}\n              {currentAsset.name}\n            </div>\n            <div>\n              <label>\n                <strong>{DESC}:</strong>\n              </label>{\" \"}\n              {currentAsset.description}\n            </div>\n            <Link\n              to={\"/assets/\" + currentAsset.id}\n            >\n              {EDIT}\n            </Link>\n          </div>\n        ) : ''}\n      </div>\n    </div>\n  );\n};\n\nexport default AssetlsList;","import {\n    RETRIEVE_ALL_ASSETS,\n    GET_CRYPTO_INFO\n} from \"./types\";\n\nimport AssetDataService from \"../services/AssetService\";\n\nexport const retrieveAllAssets = () => async (dispatch) => {\n    try {\n        const res = await AssetDataService.getAllAssets();\n        dispatch({\n            type: RETRIEVE_ALL_ASSETS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const getCryptoInfo = (id) => async (dispatch) => {\n    try {\n        const res = await AssetDataService.getCryptoInfo(id);\n\n        dispatch({\n            type: GET_CRYPTO_INFO,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};","import React from 'react';\nexport const SubHeader = () => {\n    return (\n        <>\n            <h2>Today's Cryptocurrency Prices by Market Cap</h2>\n            <h5>The global crypto market cap is $1.31T, a 5.32% increase over the last day.</h5>\n        </>\n    )\n}","import React from 'react';\nimport { Table } from 'reactstrap';\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n    retrieveAllAssets,\n\n} from \"../actions/crypto\";\nimport { AppSpinner } from '../components/spinner';\nimport GridHeader from \"../components/grid-header\";\nimport { SubHeader } from '../components/sub-header';\nimport Search from '../components/search';\n\nfunction numberWithCommas(x) {\n    if (!x) {\n        return '';\n    }\n    return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst Cryptocurrencies = (props) => {\n    const [currentAsset, setCurrentAsset] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n    const [searchName, setSearchTitle] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(true);\n    const [pageSize, setPageSize] = useState(50);\n\n    let assets = useSelector(state => {\n        if (state.crypto.length > 0) {\n            if (isLoading) {\n                setIsLoading(false);\n            }\n            if (searchName !== '') {\n                return state.crypto.filter((c) => {\n                    if (c.name.toLowerCase().includes(searchName.toLowerCase())) {\n                        return c;\n                    }\n                }).slice(0, pageSize);\n            }\n            return state.crypto.slice(0, pageSize);\n        }\n    });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(retrieveAllAssets());\n    }, []);\n\n    const onChangeSearchName = e => {\n        const searchTitle = e.target.value;\n        setSearchTitle(searchTitle);\n    };\n\n    const refreshData = () => {\n        setCurrentAsset(null);\n        setCurrentIndex(-1);\n    };\n\n    const setActiveAsset = (asset, index) => {\n        setCurrentAsset(asset);\n        setCurrentIndex(index);\n    };\n\n\n\n    const findByName = () => {\n        setIsLoading(true);\n        refreshData();\n        dispatch(retrieveAllAssets());\n    };\n\n    const getLogo = (id) => {\n        return 'https://s2.coinmarketcap.com/static/img/coins/64x64/' + id + '.png';\n    }\n\n    const searchData = {\n        searchName,\n        onChangeSearchName,\n        findByName\n    }\n\n    const headerData = ['#', '', 'Name', 'Symbol', 'Max Supply', 'Price'];\n\n    return (\n        <>\n            <SubHeader></SubHeader>\n            {!isLoading ? <>\n                <Search searchData={searchData}></Search>\n                <Table dark>\n                    <GridHeader headerData={headerData}></GridHeader>\n                    {assets.length > 0 && <tbody>\n                        {assets.map((crypto, index) => (\n                            <tr key={index}>\n                                <th style={{ textAlign: 'center' }} scope=\"row\">{crypto.cmc_rank}</th>\n                                <td style={{ textAlign: 'right' }}>  <img src={getLogo(crypto.id)} /></td>\n                                <td>{crypto.name}</td>\n                                <td>{crypto.symbol}</td>\n                                <td>{numberWithCommas(crypto.max_supply)}</td>\n                                <td>${crypto.quote ? crypto.quote.USD.price.toFixed(2) : ''}</td>\n                            </tr>\n                        ))}\n                    </tbody>}\n                </Table>\n            </> : <AppSpinner></AppSpinner>}\n        </>\n    );\n}\n\nexport default Cryptocurrencies;","import React from 'react';\nimport { Table } from 'reactstrap';\n\nconst Exchanges = (props) => {\n    return (\n        <Table dark>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>First new</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                </tr>\n                <tr>\n                    <th scope=\"row\">3</th>\n                    <td>Larry</td>\n                    <td>the Bird</td>\n                    <td>@twitter</td>\n                </tr>\n            </tbody>\n        </Table>\n    );\n}\n\nexport default Exchanges;","import React from 'react';\nconst ComingSoon = (props) => {\n    return (\n        <div>\n            <div className=\"bgimg\">\n                <div className=\"topleft\">\n                    <p>Logo</p>\n                </div>\n            </div>\n            <div className=\"middle\">\n                <h1>COMING SOON</h1>\n                <hr/>\n                <p>35 days</p>\n            </div>\n            <div className=\"bottomleft\">\n                <p>Some text</p>\n            </div>\n        </div>\n    )\n}\nexport default ComingSoon;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddAsset from \"./pages/AddAsset\";\nimport Asset from \"./pages/Asset\";\nimport AssetsList from \"./pages/AssetsList\";\nimport Cryptocurrencies from \"./pages/cryptocurrencies\";\nimport Exchanges from \"./pages/exchanges\";\nimport { Badge } from 'reactstrap';\nimport ComingSoon from \"./pages/comingsoon\";\n\nfunction App() {\n  return (\n    <Router>\n      <nav style={{ paddingBottom: '0.1rem', paddingTop: '0.5rem' }} className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <h6 style={{ marginLeft: '10px' }}><Badge color=\"secondary\">Cryptos:<span style={{ color: \"rgb(97, 136, 255)\" }}>10,945</span></Badge></h6>\n        <h6><Badge color=\"secondary\">Exchanges:<span style={{ color: \"rgb(97, 136, 255)\" }}>385</span></Badge></h6>\n        <h6><Badge color=\"secondary\">Market Cap: <span style={{ color: \"rgb(97, 136, 255)\" }}>$1,294,743,573,277</span></Badge></h6>\n        <h6><Badge color=\"secondary\">24h Vol: <span style={{ color: \"rgb(97, 136, 255)\" }}>$52,529,691,582</span></Badge></h6>\n        <h6><Badge color=\"secondary\">Dominance: <span style={{ color: \"rgb(97, 136, 255)\" }}>BTC: 45.9% ETH: 17.2%</span></Badge></h6>\n        <h6><Badge color=\"secondary\">Eth Gas:<span style={{ color: \"rgb(97, 136, 255)\" }}>19 Gwei</span></Badge></h6>\n      </nav>\n      <hr style={{ margin: '0.01rem' }}></hr>\n\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a style={{ marginLeft: '20px' }} href=\"/assets\" className=\"navbar-brand\">\n          CoinView.AI\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/cryptocurrencies\"} className=\"nav-link\">\n              Cryptocurrencies\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/assets\"} className=\"nav-link\">\n              Portfolio\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              Exchanges\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              NFT\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              Watchlist\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              Calendars\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              Products\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/comingsoon\"} className=\"nav-link\">\n              Learn\n            </Link>\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n\n        <Switch>\n          <Route exact path={[\"/\", \"/cryptocurrencies\"]} component={Cryptocurrencies} />\n          <Route exact path={[\"/exchanges\"]} component={Exchanges} />\n          <Route exact path=\"/add\" component={AddAsset} />\n          <Route exact path=\"/assets\" component={AssetsList} />\n          <Route path=\"/assets/:id\" component={Asset} />\n          <Route path=\"/comingsoon\" component={ComingSoon} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import {\n    CREATE_ASSET,\n    RETRIEVE_ASSETS,\n    UPDATE_ASSET,\n    DELETE_ASSET,\n    DELETE_ALL_ASSETS} from \"../actions/types\";\n\nconst initialState = [];\n\nfunction assetReducer(assets = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case CREATE_ASSET:\n            return [...assets, payload];\n\n        case RETRIEVE_ASSETS:\n            return payload;\n\n        case UPDATE_ASSET:\n            return assets.map((asset) => {\n                if (asset.id === payload.id) {\n                    return {\n                        ...asset,\n                        ...payload,\n                    };\n                } else {\n                    return asset;\n                }\n            });\n\n        case DELETE_ASSET:\n            return assets.filter(({ id }) => id !== payload.id);\n\n        case DELETE_ALL_ASSETS:\n            return [];\n\n        default:\n            return assets;\n    }\n};\n\nexport default assetReducer;","import {\n    RETRIEVE_ALL_ASSETS\n} from \"../actions/types\";\n\nconst initialState = [];\n\nfunction cryptoReducer(assets = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case RETRIEVE_ALL_ASSETS:\n            return payload;\n\n        default:\n            return assets;\n    }\n};\n\nexport default cryptoReducer;","import { combineReducers } from \"redux\";\nimport assets from \"./assets\";\nimport crypto from \"./crypto\";\n\nexport default combineReducers({\n    assets,\n    crypto\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n  dsn: \"https://8f3a5ff332304932af961533cf11a0e8@o923000.ingest.sentry.io/5870078\",\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}